static_resources:
  listeners:
    -
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8020
      filter_chains:
        -
          filters:
            -
              name: envoy.http_connection_manager
              typed_config:
                '@type': type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
                codec_type: auto
                stat_prefix: ingress_http
                route_config:
                  name: local_route
                  virtual_hosts:
                    -
                      name: backend
                      domains:
                        - '*'
                      cors:
                        allow_methods: "HEAD, GET, POST, OPTIONS"
                      routes:
                        -
                          match:
                            prefix: "/socket.io/1"
                          route:
                            cluster: socket_server_1
                            upgrade_configs: [{upgrade_type: websocket}]
                        -
                          match:
                            prefix: "/socket.io/2"
                          route:
                            cluster: socket_server_2
                            upgrade_configs: [{upgrade_type: websocket}]
                http_filters:
                  # - name: envoy.lua
                  #   typed_config:
                  #     "@type": type.googleapis.com/envoy.config.filter.http.lua.v2.Lua
                  #     inline_code: |
                  #       function envoy_on_request(request_handle)
                  #         request_handle:headers():add("foo", "bar")
                  #       end
                  #       function envoy_on_response(response_handle)
                  #         body_size = response_handle:body():length()
                  #         response_handle:headers():add("Access-Control-Allow-Origin", "http://localhost:8001")
                  #         response_handle:headers():add("Access-Control-Allow-Credentials", "true")
                  #         response_handle:headers():add("Access-Control-Allow-Methods", "GET, POST, OPTIONS, HEAD")
                  #         response_handle:headers():add("Allow", "GET, POST, OPTIONS, HEAD")
                  #       end
                  - name: envoy.router
                    typed_config: {}
  clusters:
    -
      name: socket_server_1
      connect_timeout: 0.25s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: socket_server
        endpoints:
          -
            lb_endpoints:
              -
                endpoint:
                  address:
                    socket_address:
                      address: socket_server_1
                      port_value: 80
              # -
              #   endpoint:
              #     address:
              #       socket_address:
              #         address: socket_server_2
              #         port_value: 80
    -
      name: socket_server_2
      connect_timeout: 0.25s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: socket_server_2
        endpoints:
          -
            lb_endpoints:
              -
                endpoint:
                  address:
                    socket_address:
                      address: socket_server_2
                      port_value: 80
admin:
  access_log_path: /dev/null
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8081